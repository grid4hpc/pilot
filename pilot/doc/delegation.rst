.. -*- encoding: utf-8 -*-

================================
 Делегация сертификатов в Pilot
================================

Предложение по реализации
=========================

:Автор:
  Шамардин Л.В.

Как это сделано у других: WMS (1)
---------------------------------

 * Каждая задача связывается с delegation_id.
 * Пользователь может сделать новую делегацию сам в любое время, ей
   будет присвоен случайный delegation_id.
 * При запуске задачи нужно указать delegation_id.

   - Есть опция ``-a``, означающая: *сделай новую делегацию, и
     используй ее id*.
 * Управляется одной командой ``glite-wms-job-delegate-proxy``, команд
   уничтожения и т.п. нет.

Как это сделано у других: WMS (2)
---------------------------------

 * Обновление через myproxy запускается из обертывающего скрипта задачи.
 * При создании делегации на WMS никаких параметров, связанных с
   обновлением через myproxy не обнаружено.
 * Что делает (и делает ли) WMS при запуске workflow-задачи для
   обновления сертификатов не ясно.

Как это сделано у других: FTS (1)
---------------------------------

 * Для запуска задач на сервере должна присутствовать делегация.
 * Идентификатор делегации указывается при запуске задачи.
 * Идентификатор делегации либо выбирается пользователем, либо
   генерируется автоматически.
 * Автоматический идентификатор - хэш от Cert Subject + VOMS FQANS.

Как это сделано у других: FTS (2)
---------------------------------

 * Если никакие опции не указываются, используется автоматический
   идентификатор.
 * У делегации есть время жизни, ее можно продлять (переделегировать)
   и уничтожать.

   - ``glite-delegation-init``, ``glite-delegation-info``,
     ``glite-delegation-destroy``.

 * Вопрос доступа к делегациям с существующим идентификатором другим
   пользователям до конца не ясен.

Как это сделано у других: FTS (3)
---------------------------------

 * Обновление делегации является (насколько я смог разобраться)
   ответственностью "клиента".
 * Обновление делегации делается по сути той же командой
   ``glite-delegation-init``.

Как это сделано у других: WS-GRAM (1)
-------------------------------------

 * Есть отдельный сервис управления делегациями, каждая делегация
   получает *EPR*.

 * Локальные для контейнера сервисы имеют доступ к любым делегациям.

 * Есть клиент, позволяющий пользователю обновлять свои делегации по
   их *EPR*.

Как это сделано у других: WS-GRAM (2)
-------------------------------------

 * При запуске задачи указываются *EPR* делегаций, которые "уходят" с
   задачей.

 * Задача может использовать для staging не ту делегацию, которая
   доступна задаче во время выполнения.

   - Кажется. Необходимо уточнение.

 * По умолчанию при запуске задачи ``globusrun-ws`` создает новую
   делегацию или комплект делегаций (?).

 * MyProxy не поддерживается.

Как это сделано у других: WS-GRAM (3)
-------------------------------------

 * Что происходит с делегацией, доступной задаче, если задача уже
   запущена на узле кластера, а сервис делегаций получил новую
   делегацию?

   - Очень важный, но все еще не проверенный вопрос.
   - Если ответ ничего, то для нас все плохо.

Как это сделано у других: WS-GRAM (4)
-------------------------------------

 * WS-Delegation для обновления делегаций использует сообщения типа
   ``RefreshRequest``.
 * ``RefreshRequest`` === WS-Trust ``RequestSecurityTokenType``.
 * WS-Trust ``RequestSecurityTokenType``:

     *"Actual content model is non-deterministic, hence wildcard."*
     
     ::

        <xs:sequence>
          <xs:any namespace='##any' processContents='lax' minOccurs='0' maxOccurs='unbounded' />
        </xs:sequence>
     

Как это сделано у других: CREAM CE
----------------------------------

 * Аналогично WMS.

Как pilot должен "обновлять сертификаты"
----------------------------------------

Предполагается, что при запуске длинной задачи происходит следующее:

 * Задача не изменяется (не оборачивается), отправляется на WS-GRAM
   "как есть".
 * Пилот следит за живостью сертификатов, обновляет их через MyProxy,
   и обновляет делегации, используемые задачей на сервере
   WS-Delegation.

Что есть сейчас
---------------

 * К каждой задаче прикладывается своя "делегация" (на самом деле,
   копия прокси-сертификата).

Планы (1)
---------

 * Поскольку "обновлять сертификаты" должен пилот, лучше сократить
   количество делегаций, за состоянием которых нужно следить.

 * Есть предложение сделать по аналогии с FTS: автоматические ID,
   основанные на Subject + VOMS extensions.

Планы (2)
---------

 * По умолчанию используется автоматический id делегации, но есть
   возможность указать id для клиента.

 * При каждом "существенном" обращении к сервису по умолчанию клиент
   проверяет, что свежее, его proxy или текущая делегация с
   соответствующими credentials. При необходимости автоматически
   обновляет делегацию.

 * Pilot следит за состоянием всех делегаций (возможно через Re-fresh).

Планы (3)
---------

 * Таким образом, для большинства пользователей пилоту необходимо
   "отслеживать" ровно одну делегацию.

 * Параноидальный пользователь имеет контроль над своими делегациями и
   возможность их уничтожать.

 * Если пользователь запустил задачу, "промахнувшись" с длительностью
   сертификата, то при активном использовании сервиса он может этого и
   не заметить.
